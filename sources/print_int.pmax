
// Temporary address for the string version of the int to print
macro __stdlib_ints = [char*] 12000;

// Covnert an int to a string and print it
func print_int(n: int) {
    
    if (n <= 0) {
        *__stdlib_ints = '0';
        *(__stdlib_ints + 1) = '\0';
        call print(__stdlib_ints);
        return;
    }
    
    var i = 0;
    var m = 10;
    
    while (n > 0) {
        
        var remainder = __stdlib_mod(n, m);
        n @-= remainder;
        
        var digit = __stdlib_div(__stdlib_mul(10, remainder), m);
        var c = '0' + digit;
        *(__stdlib_ints + i) = c;
        i @+= 1;
        
        m = __stdlib_mul(m, 10);
        
    }
    
    *(__stdlib_ints + i) = '\0';
    *(__stdlib_ints + i + 1) = '\0';
    
    var j = 0;
    
    // Reverse order
    while (j <= __stdlib_div(i, 2)) {
        var tmp = *(__stdlib_ints + j);
        *(__stdlib_ints + j) = *(__stdlib_ints + i - j);
        *(__stdlib_ints + i - j) = tmp;
        j @+= 1;
    }
    
    call print(__stdlib_ints + 1);
    
}
